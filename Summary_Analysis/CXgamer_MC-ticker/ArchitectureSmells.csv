Project Name,Package Name,Architecture Smell,Cause of the Smell
CXgamer_MC-ticker,logging,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): sim.constants
CXgamer_MC-ticker,<All packages>,Dense Structure, The tool detected the smell because all the analyzed components exhibit excessive and dense dependencies among themselves. Average degree = 6.91. All the dependencies among components: from: logging to: sim.constants; from: presentation.blocks to: presentation.objects; from: presentation.blocks to: presentation.main; from: presentation.blocks to: logging; from: presentation.controllers to: presentation.blocks; from: presentation.controllers to: logging; from: presentation.controllers to: presentation.gui; from: presentation.controllers to: presentation.gui.windows.main.options; from: presentation.controllers to: presentation.main; from: presentation.controllers to: presentation.tools; from: presentation.controllers to: sim.logic; from: presentation.controllers to: presentation.objects; from: presentation.controllers to: sim.constants; from: presentation.controllers to: presentation.gui.windows.world; from: presentation.controllers to: utils; from: presentation.controllers to: presentation.gui.tiles; from: presentation.controllers to: presentation.gui.time; from: presentation.controllers to: presentation.gui.menu; from: presentation.controllers to: presentation.gui.editor.layer; from: presentation.controllers to: presentation.gui.editor.entity; from: presentation.controllers to: presentation.gui.editor.selection; from: presentation.controllers to: presentation.gui.editor; from: presentation.controllers to: presentation.gui.choosers; from: presentation.debug to: logging; from: presentation.exceptions to: presentation.objects; from: presentation.gui to: presentation.controllers; from: presentation.gui to: presentation.objects; from: presentation.gui to: logging; from: presentation.gui to: presentation; from: presentation.gui to: presentation.gui.desktop; from: presentation.gui to: presentation.gui.toolbar; from: presentation.gui to: presentation.gui.menu; from: presentation.gui to: presentation.main; from: presentation.gui.editor.block to: presentation.controllers; from: presentation.gui.editor.block to: presentation.gui.editor; from: presentation.gui.editor.block to: presentation.objects; from: presentation.gui.editor.block to: presentation.main; from: presentation.gui.editor to: presentation.controllers; from: presentation.gui.editor to: presentation.main; from: presentation.gui.editor to: sim.constants; from: presentation.gui.editor to: presentation.objects; from: presentation.gui.editor to: presentation.gui.editor.selection; from: presentation.gui.editor to: presentation.gui.editor.block; from: presentation.gui.editor.entity to: presentation.controllers; from: presentation.gui.editor.entity to: presentation.objects; from: presentation.gui.editor.entity to: presentation.gui.editor; from: presentation.gui.editor.entity to: sim.constants; from: presentation.gui.editor.entity to: presentation.main; from: presentation.gui.editor.layer to: presentation.controllers; from: presentation.gui.editor.layer to: presentation.gui.editor; from: presentation.gui.editor.layer to: presentation.objects; from: presentation.gui.editor.layer to: logging; from: presentation.gui.editor.layer to: sim.constants; from: presentation.gui.editor.layer to: presentation.main; from: presentation.gui.editor.selection to: presentation.main; from: presentation.gui.editor.selection to: presentation.controllers; from: presentation.gui.editor.selection to: presentation.objects; from: presentation.gui.editor.selection to: presentation.gui.editor; from: presentation.gui.editor.selection to: sim.constants; from: presentation.gui.menu to: presentation.controllers; from: presentation.gui.menu to: presentation.gui.choosers; from: presentation.gui.menu to: presentation.main; from: presentation.gui.menu to: logging; from: presentation.gui.menu to: presentation.objects; from: presentation.gui.tiles.conditions to: presentation.gui.tiles; from: presentation.gui.tiles.conditions to: presentation.objects; from: presentation.gui.tiles to: presentation.main; from: presentation.gui.tiles to: presentation.gui.tiles.conditions; from: presentation.gui.tiles to: presentation.objects; from: presentation.gui.tiles to: logging; from: presentation.gui.toolbar to: presentation.controllers; from: presentation.gui.toolbar to: presentation.gui.time; from: presentation.gui.windows.main to: presentation.gui.editor; from: presentation.gui.windows.main to: presentation.objects; from: presentation.gui.windows.main to: presentation.controllers; from: presentation.gui.windows.main to: presentation.gui.toolbar; from: presentation.gui.windows.main to: presentation.main; from: presentation.gui.windows.main to: presentation.gui.time; from: presentation.gui.windows.main to: presentation.gui.menu; from: presentation.gui.windows.main.options to: presentation.controllers; from: presentation.gui.windows.main.options to: sim.constants; from: presentation.gui.windows.main.options to: presentation.main; from: presentation.gui.windows.world to: presentation.controllers; from: presentation.gui.windows.world to: presentation.gui.editor; from: presentation.gui.windows.world to: presentation.objects; from: presentation.gui.windows.world to: utils; from: presentation.gui.windows.world to: presentation.gui; from: presentation.gui.windows.world to: presentation.gui.menu; from: presentation to: presentation.controllers; from: presentation to: presentation.main; from: presentation to: presentation.objects; from: presentation.threads to: presentation.controllers; from: presentation.threads to: presentation.gui.editor; from: presentation.threads to: presentation.gui.windows.main; from: presentation.threads to: presentation.objects; from: presentation.threads to: presentation.main; from: presentation.threads to: logging; from: presentation.tools to: presentation.controllers; from: presentation.tools to: presentation.main; from: presentation.tools to: presentation.objects; from: presentation.tools to: logging; from: presentation.tools to: presentation.blocks; from: presentation.tools to: presentation.gui.editor.selection; from: presentation.tools to: presentation.gui.editor; from: sim.constants to: presentation.gui.choosers; from: sim.constants to: logging; from: sim.loading to: sim.constants; from: sim.loading to: logging; from: sim.logic to: sim.loading; from: sim.logic to: sim.objects; from: sim.logic to: sim.constants; from: sim.logic to: logging; from: sim.logic to: presentation.objects; from: sim.logic to: utils; from: sim.objects to: sim.logic; from: (default package) to: presentation.controllers; from: test to: sim.logic; from: test to: presentation.controllers; from: test to: utils; from: test to: sim.constants; from: test to: logging.
CXgamer_MC-ticker,logging,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: logging; sim.constants; logging
CXgamer_MC-ticker,presentation.controllers,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): presentation.blocks; presentation.gui; presentation.gui.windows.main.options; presentation.tools; sim.logic; presentation.gui.windows.world; presentation.gui.menu; presentation.gui.editor.layer; presentation.gui.editor.entity; presentation.gui.editor.selection; presentation.gui.editor
CXgamer_MC-ticker,presentation.controllers,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [BlockController; MainController; SimController; TileController; TimeController; WorldController; NBTController]; [MainController.KeyDispatcher]; [TimeController.Thready]; [WorldController.TimerUpdater]. LCC (Lack of Component Cohesion) = 0.4
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.windows.main.options; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.tools; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.windows.world; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.menu; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.editor.layer; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.editor.entity; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.editor.selection; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui.editor; presentation.controllers
CXgamer_MC-ticker,presentation.controllers,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.controllers; presentation.gui; presentation.gui.toolbar; presentation.controllers
CXgamer_MC-ticker,presentation.gui.editor,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): presentation.gui.editor.selection; presentation.gui.editor.block
CXgamer_MC-ticker,presentation.gui.editor,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.gui.editor; presentation.gui.editor.block; presentation.gui.editor
CXgamer_MC-ticker,presentation.gui.tiles,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): presentation.gui.tiles.conditions
CXgamer_MC-ticker,presentation.gui.tiles,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation.gui.tiles; presentation.gui.tiles.conditions; presentation.gui.tiles
CXgamer_MC-ticker,presentation.gui.windows.main,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ExportWindow]; [ExportWindow.WorldSelectedHandler]; [ExportWindow.BrowsePathHandler]; [ExportWindow.ExportHandler]; [MainWindow]; [MainWindow.CloseHandler]; [NewWorldWindow]; [NewWorldWindow.IdStringMapping]. LCC (Lack of Component Cohesion) = 1.0
CXgamer_MC-ticker,presentation.gui.windows.world,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): presentation.gui
CXgamer_MC-ticker,presentation.gui.windows.world,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [DrawingWindow]; [DrawingWindow.ZoomHandler]; [DrawingWindow.LayerHandler]; [DrawingWindow.InternalFrameHandler]; [DrawingWindow.ScrollHandler]; [DrawingWindow.DragHandler]; [NBTviewer; WorldWindow]; [NBTviewer.TreeExpansionHandler]; [NBTviewer.LaterUpdater]; [NBTviewer.NBTRenderer]; [WorldWindow.CloseHandler]. LCC (Lack of Component Cohesion) = 0.92
CXgamer_MC-ticker,presentation,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: presentation; presentation.controllers; presentation.gui; presentation
CXgamer_MC-ticker,sim.loading,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [ClassExtractor; Linker; Translator; ClassPathHack; CSVparser; JoinedParser]; [ClassTester]. LCC (Lack of Component Cohesion) = 0.29
CXgamer_MC-ticker,sim.logic,Cyclic Dependency,The tool detected the smell in this component because this component participates in a cyclic dependency. The participating components in the cycle are: sim.logic; sim.objects; sim.logic
CXgamer_MC-ticker,sim.objects,Unstable Dependency,The tool detected the smell in this component because this component depends on other components that are less stable than itself. This component depends on following less stable component(s): sim.logic
CXgamer_MC-ticker,utils,Feature Concentration,The tool detected the smell in this component because the component realizes more than one architectural concern/feature. Independent sets of related classes within this component are: [CircularByteBuffer]; [CircularByteBuffer.CircularByteBufferInputStream]; [CircularByteBuffer.CircularByteBufferOutputStream]; [Steneography]; [Tag]; [Tag.Type]. LCC (Lack of Component Cohesion) = 1.0
