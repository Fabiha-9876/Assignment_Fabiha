Project Name,Package Name,Type Name,Method Name,Implementation Smell,Cause of the Smell,Method start line no
brotherBear_aor-java-neo,aor,Main,main,Magic Number,The method contains a magic number: 1000f,23
brotherBear_aor-java-neo,aor,Parser,createProvinceInsert,Long Statement,The length of the statement "merges.append("MERGE (p:Province {name:'").append(parts[0].trim()).append("'` capacity: ").append(parts[1].trim()).append("})\n");" is 130.,7
brotherBear_aor-java-neo,aor,Parser,createProvinceInsert,Magic Number,The method contains a magic number: 3,7
brotherBear_aor-java-neo,aor,Parser,createProvinceInsert,Magic Number,The method contains a magic number: 2,7
brotherBear_aor-java-neo,aor,Parser,createConnection,Magic Number,The method contains a magic number: 3,33
brotherBear_aor-java-neo,aor,Parser,createConnection,Magic Number,The method contains a magic number: 2,33
brotherBear_aor-java-neo,aor,ProvincesTest,testDeclareNorthAmerica,Long Statement,The length of the statement "assertEquals("MATCH (r0:Resource {type: 'Grain'})\n" + "MATCH (r1:Resource {type: 'Cloth'})\n" + "MATCH (r2:Resource {type: 'Fur'})\n"+ "MERGE (p:Province {name:'North America'` capacity: 6})\n"+ "MERGE (p) -[:PROVIDES]-> (r0)\n"+ "MERGE (p) -[:PROVIDES]-> (r1)\n"+ "MERGE (p) -[:PROVIDES]-> (r2)\n"`Parser.createProvinceInsert(declaration));" is 342.,9
brotherBear_aor-java-neo,aor,ProvincesTest,testDeclareBordeaux,Long Statement,The length of the statement "assertEquals("MATCH (r0:Resource {type: 'Timber'})\nMERGE (p:Province {name:'Bordeaux'` capacity: 4})\n" + "MERGE (p) -[:PROVIDES]-> (r0)\n"`Parser.createProvinceInsert(declaration));" is 183.,18
brotherBear_aor-java-neo,aor,ProvincesTest,testDeclareParis,Long Statement,The length of the statement "assertEquals("MATCH (r0:Resource {type: 'Stone'})\nMERGE (p:Province {name:'Paris'` capacity: 4})\n" + "MERGE (p) -[:PROVIDES]-> (r0)\n"`Parser.createProvinceInsert(declaration));" is 179.,25
brotherBear_aor-java-neo,aor,ProvincesTest,testCreateArea,Long Statement,The length of the statement "assertEquals("MATCH (p1:Province {name: 'Novgorod'})` (p2:Province {name: 'Riga'})` (p3:Province {name: 'Mitau'})\n" + "MERGE (a:Area {name: 'Area I'})\n" + "MERGE (p1) -[:BELONGS_TO]-> (a)\n"+ "MERGE (p2) -[:BELONGS_TO]-> (a)\n"+ "MERGE (p3) -[:BELONGS_TO]-> (a)\n"`Parser.createArea(declaration));" is 299.,32
brotherBear_aor-java-neo,aor,ProvincesTest,testCreateSea,Long Statement,The length of the statement "assertEquals("MATCH (p1:Province {name: 'Edinburg'})` (p2:Province {name: 'Shetland Islands'})` " + "(p3:Province {name: 'Iceland'})\n" + "MERGE (s:Sea {name: 'Greenland Sea'})\n"+ "MERGE (p1) -[:CONNECTS_TO]-> (s)\n"+ "MERGE (p2) -[:CONNECTS_TO]-> (s)\n"+ "MERGE (p3) -[:CONNECTS_TO]-> (s)\n"`Parser.createSea(declaration));" is 325.,40
brotherBear_aor-java-neo,aor,ProvincesTest,testCreateSattelite,Long Statement,The length of the statement "assertEquals("MATCH (p1:Province {name: 'Sarai'})` (p2:Province {name: 'Tana'})\n" + "MERGE (p:Province {name: 'Kamishin'` capacity: 1})\n" + "MERGE (p) -[:SUPPORTS]-> (p1)\n"+ "MERGE (p) -[:SUPPORTS]-> (p2)\n"`Parser.createSatteliteConnection(declaration));" is 258.,54
brotherBear_aor-java-neo,aor,ProvincesTest,testCreateSattelite3,Long Statement,The length of the statement "assertEquals("MATCH (p1:Province {name: 'Basque'})` (p2:Province {name: 'Toledo'})` (p3:Province {name: 'Lisbon'})\n" + "MERGE (p:Province {name: 'Leon'` capacity: 1})\n" + "MERGE (p) -[:SUPPORTS]-> (p1)\n"+ "MERGE (p) -[:SUPPORTS]-> (p2)\n"+ "MERGE (p) -[:SUPPORTS]-> (p3)\n"`Parser.createSatteliteConnection(declaration));" is 324.,62
brotherBear_aor-java-neo,aor,ProvincesTest,testConnectProvincesByLand,Long Statement,The length of the statement "assertEquals("MATCH (a:Province {name: 'Paris'})` (b:Province {name: 'St.Malo'})\n" + "MERGE (a) -[:CONNECT_BY_LAND]-> (b)\n" + "MERGE (b) -[:CONNECT_BY_LAND]-> (a)\n"`Parser.createConnection(declaration));" is 206.,70
brotherBear_aor-java-neo,aor,ProvincesTest,testConnectProvincesByCoast,Long Statement,The length of the statement "assertEquals("MATCH (a:Province {name: 'Paris'})` (b:Province {name: 'London'})\n" + "MERGE (a) -[:CONNECT_BY_COAST]-> (b)\n" + "MERGE (b) -[:CONNECT_BY_COAST]-> (a)\n"`Parser.createConnection(declaration));" is 207.,77
brotherBear_aor-java-neo,aor,ProvincesTest,testConnectProvincesByLandAndCoast,Long Statement,The length of the statement "assertEquals("MATCH (a:Province {name: 'Paris'})` (b:Province {name: 'London'})\n" + "MERGE (a) -[:CONNECT_BY_LAND]-> (b)\n" + "MERGE (b) -[:CONNECT_BY_LAND]-> (a)\n"+ "MERGE (a) -[:CONNECT_BY_COAST]-> (b)\n"+ "MERGE (b) -[:CONNECT_BY_COAST]-> (a)\n"`Parser.createConnection(declaration));" is 289.,84
